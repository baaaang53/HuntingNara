
CREATE DATABASE IF NOT EXISTS main;

USE main;

CREATE TABLE USER
(
  ID VARCHAR(20) NOT NULL,
  PW VARCHAR(20) NOT NULL,
  PHONE VARCHAR(20) NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  TYPE VARCHAR(20) NOT NULL,
  REQ_COUNT INT DEFAULT 0,
  RATE FLOAT DEFAULT 0,
  CAREER INT DEFAULT 0,
  AGE INT,
  MAJOR VARCHAR(20),
  PRIMARY KEY (ID)
);

INSERT INTO USER (ID,PW,PHONE,NAME,TYPE)
VALUES ('admin','admin','00000000000', 'administrator','administrator');

CREATE TABLE F_ABILITY
(
  F_ID VARCHAR(20) NOT NULL,
  LANGUAGE VARCHAR(20) NOT NULL,
  COMPETENCE INT NOT NULL,
  PRIMARY KEY(F_ID,LANGUAGE),
  FOREIGN KEY(F_ID) REFERENCES USER(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE OUTER_PORTFOLIO
(
  P_NUM INT NOT NULL AUTO_INCREMENT,
  F_ID VARCHAR(20) NOT NULL,
  CONTENT VARCHAR(255) NOT NULL,
  PRIMARY KEY(P_NUM),
  UNIQUE(F_ID),
  FOREIGN KEY(F_ID) REFERENCES USER(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE REQUEST
(
  R_NUM INT NOT NULL AUTO_INCREMENT,
  TITLE VARCHAR(50) NOT NULL,
  F_ID VARCHAR(20) NOT NULL,
  C_ID VARCHAR(20) NOT NULL,
  S_DATE DATE NOT NULL,
  E_DATE DATE NOT NULL,
  COST INT NOT NULL,
  CAREER INT,
  STATE VARCHAR(20) DEFAULT 'registered',
  F_RATE FLOAT,
  CHECK(1<=F_RATE AND F_RATE<=5),
  C_RATE FLOAT,
  CHECK(1<=C_RATE AND C_RATE <=5),
  REPORT VARCHAR (255),
  PRIMARY KEY(R_NUM),
  FOREIGN KEY(F_ID) REFERENCES USER(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY(C_ID) REFERENCES USER(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE REQ_ABILITY
(
  R_NUM INT NOT NULL,
  LANGUAGE VARCHAR(20) NOT NULL,
  COMPETENCE INT NOT NULL,
  PRIMARY KEY(R_NUM,LANGUAGE),
  FOREIGN KEY (R_NUM) REFERENCES REQUEST(R_NUM)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE APPLIED_REQ
(
  R_NUM INT NOT NULL,
  F_ID VARCHAR(20) NOT NULL,
  PRIMARY KEY(R_NUM,F_ID),
  FOREIGN KEY (R_NUM) REFERENCES REQUEST(R_NUM)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY (F_ID) REFERENCES USER(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE MESSAGE
(
  M_NUM INT NOT NULL AUTO_INCREMENT,
  CONTENT VARCHAR(255) NOT NULL,
  DATETIME DATE NOT NULL,
  S_ID VARCHAR(20) NOT NULL,
  R_ID VARCHAR(20) NOT NULL,
  PRIMARY KEY(M_NUM),
  FOREIGN KEY(S_ID) REFERENCES USER(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  FOREIGN KEY(R_ID) REFERENCES USER(ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE REQ_DOC
(
  DOC_NUM INT NOT NULL AUTO_INCREMENT,
  R_NUM INT NOT NULL,
  FILE VARCHAR(255) NOT NULL,
  PRIMARY KEY(DOC_NUM),
  FOREIGN KEY(R_NUM) REFERENCES REQUEST (R_NUM)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);